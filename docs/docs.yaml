openapi: 3.0.0
info:
  title: PostPilot API
  description: API documentation for scheduling posts
  version: 1.0.0
servers:
  - url: http://localhost:4000/api/v1
paths:
  /posts:
    get:
      tags:
        - Posts
      summary: Get all posts
      description: Get all scheduled social media posts
      security:
        - bearerAuth: []
      parameters:
        - name: platform
          in: query
          required: false
          schema:
            type: string
          description: Filter by platform
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
                  message:
                    type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /posts/{id}:
    get:
      tags:
        - Posts
      summary: Get a post by ID
      description: Get a scheduled social media post by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Post ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Post'
                  message:
                    type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /posts/schedule:
    post:
      tags:
        - Posts
      summary: Create a new post
      description: Schedule a social media post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /social-credentials:
    get:
      tags:
        - Social Credentials
      summary: Get all social credentials
      description: Get all social media credentials
      security:
        - bearerAuth: []
      parameters:
        - name: platform
          in: query
          required: false
          schema:
            type: string
          description: Filter by platform
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SocialCredential'
                  message:
                    type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    post:
      tags:
        - Social Credentials
      summary: Create a new social credential
      description: Add a new social media credential
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSocialCredentialBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /media/upload-image:
    post:
      tags:
        - Media
      summary: Upload an image
      description: Upload an image to be used in a post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadImageBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadImageResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /statistics:
    get:
      tags:
        - Statistics
      summary: Get statistics
      description: Get statistics about the posts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/GetStatisticsResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Post:
      type: object
      properties:
        id:
          type: string
        platform:
          type: string
        status:
          type: string
        socialCredentialID:
          type: string
        socialCredential:
          type: object
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                avatar_url:
                  type: string
              additionalProperties:
                oneOf:
                  - type: string
        metadata:
          type: object
          properties:
            type:
              type: string
            content:
              type: string
            assets:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  url:
                    type: string
    CreatePostBody:
      type: object
      properties:
        publicationTime:
          type: string
          format: date-time
        socialPosts:
          type: array
          items:
            type: object
            properties:
              platform:
                type: string
              socialCredentialID:
                type: string
              metadata:
                type: object
                properties:
                  type:
                    type: string
                  content:
                    type: string
                  assets:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        url:
                          type: string
    SocialCredential:
      type: object
      properties:
        id:
          type: string
        ownerId:
          type: string
        socialId:
          type: string
        socialOwnerId:
          type: string
        platform:
          type: string
        credentials:
          type: object
          additionalProperties:
            oneOf:
              - type: string
        metadata:
          type: object
          properties:
            name:
              type: string
            avatar_url:
              type: string
          additionalProperties:
            oneOf:
              - type: string
    CreateSocialCredentialBody:
      type: array
      items:
        type: object
        properties:
          platform:
            type: string
          socialId:
            type: string
          socialOwnerId:
            type: string
          credentials:
            type: object
            additionalProperties:
              oneOf:
                - type: string
          metadata:
            type: object
            properties:
              name:
                type: string
              avatar_url:
                type: string
            additionalProperties:
              oneOf:
                - type: string
    UploadImageBody:
      type: object
      properties:
        image:
          type: string
          format: binary
    UploadImageResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              url:
                type: string
    GetStatisticsResponse:
      type: object
      properties:
        totalPosts:
          type: number
        postsByPlatform:
          type: object
          additionalProperties:
            type: number
        recentPosts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        postsByTimeRange:
          type: object
          additionalProperties:
            type: number
